lic(1) -- Ruby Dependency Management
=======================================

## SYNOPSIS

`lic` COMMAND [--no-color] [--verbose] [ARGS]

## DESCRIPTION

Lic manages an `application's dependencies` through its entire life
across many machines systematically and repeatably.

See [the lic website](http://lic.io) for information on getting
started, and Gemfile(5) for more information on the `Gemfile` format.

## OPTIONS

* `--no-color`:
  Print all output without color

* `--retry`, `-r`:
  Specify the number of times you wish to attempt network commands

* `--verbose`, `-V`:
  Print out additional logging information

## LIC COMMANDS

We divide `lic` subcommands into primary commands and utilities:

## PRIMARY COMMANDS

* [`lic install(1)`](lic-install.1.html):
  Install the gems specified by the `Gemfile` or `Gemfile.lock`

* [`lic update(1)`](lic-update.1.html):
  Update dependencies to their latest versions

* [`lic package(1)`](lic-package.1.html):
  Package the .gem files required by your application into the
  `vendor/cache` directory

* [`lic exec(1)`](lic-exec.1.html):
  Execute a script in the current lic

* [`lic config(1)`](lic-config.1.html):
  Specify and read configuration options for Lic

* `lic help(1)`:
  Display detailed help for each subcommand

## UTILITIES

* [`lic add(1)`](lic-add.1.html):
  Add the named gem to the Gemfile and run `lic install`

* [`lic binstubs(1)`](lic-binstubs.1.html):
  Generate binstubs for executables in a gem

* [`lic check(1)`](lic-check.1.html):
  Determine whether the requirements for your application are installed
  and available to Lic

* [`lic show(1)`](lic-show.1.html):
  Show the source location of a particular gem in the lic

* [`lic outdated(1)`](lic-outdated.1.html):
  Show all of the outdated gems in the current lic

* `lic console(1)`:
  Start an IRB session in the current lic

* [`lic open(1)`](lic-open.1.html):
  Open an installed gem in the editor

* [`lic lock(1)`](lic-lock.1.hmtl):
  Generate a lockfile for your dependencies

* [`lic viz(1)`](lic-viz.1.html):
  Generate a visual representation of your dependencies

* [`lic init(1)`](lic-init.1.html):
  Generate a simple `Gemfile`, placed in the current directory

* [`lic gem(1)`](lic-gem.1.html):
  Create a simple gem, suitable for development with Lic

* [`lic platform(1)`](lic-platform.1.html):
  Display platform compatibility information

* [`lic clean(1)`](lic-clean.1.html):
  Clean up unused gems in your Lic directory

* [`lic doctor(1)`](lic-doctor.1.html):
  Display warnings about common problems

* [`lic remove(1)`](lic-remove.1.html):
  Removes gems from the Gemfile

## PLUGINS

When running a command that isn't listed in PRIMARY COMMANDS or UTILITIES,
Lic will try to find an executable on your path named `lic-<command>`
and execute it, passing down any extra arguments to it.

## OBSOLETE

These commands are obsolete and should no longer be used:

* `lic cache(1)`
* `lic show(1)`
